{"version":3,"sources":["Components/Nav.js","Page/Home.js","Page/Example.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","reactstrap_es","pills","tag","Link","to","React","Component","Home","fluid","color","class","href","options","chart","type","zoomType","title","text","xAxis","enabled","startOnTick","endOnTick","showLastLabel","yAxis","legend","layout","align","verticalAlign","x","y","floating","backgroundColor","Highcharts","theme","legendBackgroundColor","borderWidth","plotOptions","scatter","marker","radius","states","hover","lineColor","tooltip","headerFormat","pointFormat","Example","headers","PlayerStats","statsArr","rowSet","statsJSONArr","forEach","entry","obj","header","index","push","seriesObj","series","player","TEAM_ABBREVIATION","MIN","PTS","name","PLAYER_NAME","Object","keys","key","symbolIndex","data","TeamColor","console","log","this","convertPlayerStatJSON","generateSeries","highcharts_react_official_default","highcharts","App","HashRouter","Nav","Switch","Route","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c5b94bf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, NavLink } from 'reactstrap';\n\nclass NavBar extends React.Component {\n  render () {\n    return(\n      <div className='home-container'>\n        <Nav pills>\n          <NavLink tag={Link} to='/'>Home</NavLink>\n          <NavLink tag={Link} to='/example'>Example</NavLink>\n        </Nav>\n      </div>\n  );\n  }\n}\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Jumbotron, Container, ListGroup, ListGroupItem, Alert, Button } from 'reactstrap';\n// var Link = require('react-router-dom').Link;\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h2 className=\"display-4\">CFM Hackathon 2018</h2>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h2 className=\"display-3\">Important Info</h2>\n            <p>Kickoff Date: 6:00pm Nov. 16</p>\n            <p>Submission deadline: 10am on Nov. 19</p>\n            <p>Theme: Portfolio Analytics</p>\n            <p>In this hackathon, we will develop a frontend application using ReactJS. A stock json file will be provided. The file consists of the one year TSX60 stocks data. Based on the data, pick 5 stocks to build a equally-weighted portfolio. The team with the highest portfolio return in a week wins.</p>\n            <Alert color=\"info\">\n              Reminder: Start looking for your group (team of 4). Don't forget to bring your own laptop and charger\n            </Alert>\n          </Container>\n        </Jumbotron>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h2 className=\"display-3\">Rules</h2>\n            <ListGroup>\n              <ListGroupItem color=\"info\">Each student will clone the starter repository and create a new team branch from the repository</ListGroupItem>\n              <ListGroupItem color=\"info\">To submit your code, you need to push your latest code to the team branch before the deadline</ListGroupItem>\n              <ListGroupItem color=\"info\">If you commit new changes after the deadline, you will be disqualified from the awards</ListGroupItem>\n              <ListGroupItem color=\"danger\"> <i class=\"em em-warning\"></i>&nbsp;&nbsp;DO NOT modify the data files or anything outside of your team folder!</ListGroupItem>\n              <ListGroupItem color=\"info\">Make sure all numbers are calculated from the data file. Do not hardcode numbers! We will catch you!</ListGroupItem>\n              <ListGroupItem color=\"info\">Project should at least include information regarding stock analysis, portfolio return, each group member's profile, and graphs/charts about the portfolio</ListGroupItem>\n            </ListGroup>\n          </Container>\n        </Jumbotron>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h1 className=\"display-3\">Kickoff</h1>\n            <p className=\"lead\">Date: 6:00pm Nov. 16</p>\n            <p>Place: DC3336</p>\n            <p>Food: Pizza will be provided<i class=\"em em-pizza\"></i></p>\n          </Container>\n        </Jumbotron>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h2 className=\"display-3\">Awards</h2>\n            <p>Categories: Best Coding Style, Best Web Design, Best Portfolio Return</p>\n            <p>Judges: CFM mentors and staffs</p>\n          </Container>\n        </Jumbotron>\n        <Jumbotron fluid>\n          <Container fluid>\n            <h2 className=\"display-3\">Resource</h2>\n            {/* <p>Tutorials: Git, ReactJS</p> */}\n            <p>\n              Git:\n              <a href=\"https://git-scm.com/downloads\">Git Download</a>,\n              <a href=\"https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup\">Git Setup</a>,\n              <a href=\"https://www.atlassian.com/git/tutorials\">Git Tutorials from Atlassian</a>,\n              <a href=\"https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases\">Git Aliases</a>,\n              <a href=\"https://git-scm.com/book/en/v2/Git-Branching-Rebasing\">Git Rebasing</a>\n            </p>\n            <Link to=\"/example\"><Button color=\"secondary\">Learn More</Button></Link>\n          </Container>\n        </Jumbotron>\n      </div>\n    )\n  }\n}\nexport default Home;\n","import React, { Component } from 'react';\n// import Players from '../Data/players';\nimport PlayerStats from '../Data/playerStats';\n// import Teams from '../Data/teams';\nimport TeamColor from \"../Data/teamColors\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { Jumbotron } from 'reactstrap';\n\nvar options = {\n  chart: {\n    type: 'scatter',\n    zoomType: 'xy'\n  },\n  title: {\n    text: 'NBA Player\\'s Score Breakdown'\n  },\n  xAxis: {\n    title: {\n        enabled: true,\n        text: 'Average Minutes Played'\n    },\n    startOnTick: true,\n    endOnTick: true,\n    showLastLabel: true\n  },\n  yAxis: {\n      title: {\n          text: 'Average Points'\n      }\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'left',\n    verticalAlign: 'top',\n    x: 100,\n    y: 70,\n    floating: false,\n    backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',\n    borderWidth: 1\n},\nplotOptions: {\n    scatter: {\n        marker: {\n            radius: 5,\n            states: {\n                hover: {\n                    enabled: true,\n                    lineColor: 'rgb(100,100,100)'\n                }\n            }\n        },\n        states: {\n            hover: {\n                marker: {\n                    enabled: false\n                }\n            }\n        },\n        tooltip: {\n            headerFormat: '<b>{series.name}</b><br>',\n            pointFormat: '{point.name} scores {point.y} points in {point.x} minutes'\n        }\n    }\n  },\n}\n\nclass Example extends Component {\n  convertPlayerStatJSON () {\n    var headers = PlayerStats.headers;\n    var statsArr = PlayerStats.rowSet;\n    var statsJSONArr = [];\n    statsArr.forEach(\n      (entry) => {\n        var obj = {};\n        headers.forEach((header, index) =>{\n          obj[header] = entry[index];\n        })\n        statsJSONArr.push(obj);\n      }\n    )\n    return statsJSONArr;\n  }\n\n  generateSeries (statsJSONArr) {\n    var seriesObj = {};\n    var series = [];\n    statsJSONArr.forEach((player) => {\n      if(!seriesObj[player.TEAM_ABBREVIATION]){\n        seriesObj[player.TEAM_ABBREVIATION] = [];\n      }\n      seriesObj[player.TEAM_ABBREVIATION].push(\n        {\n          x: player.MIN,\n          y: player.PTS,\n          name: player.PLAYER_NAME\n        }\n      )\n    })\n    Object.keys(seriesObj).forEach(key => {\n      var obj = {\n        name: key,\n        symbolIndex: 0,\n        data: seriesObj[key]\n      }\n      if(TeamColor[key]){\n        obj['color']= TeamColor[key]\n      }\n      series.push(obj);\n    });\n    console.log(series);\n    return series;\n  }\n  render() {\n    var statsJSONArr = this.convertPlayerStatJSON();\n    var series = this.generateSeries(statsJSONArr);\n    options['series'] = series;\n    return (\n      <div className='container'>\n        <Jumbotron fluid>\n          <div className='container'>\n            <h2>Example: NBA</h2>\n            <HighchartsReact\n              highcharts={Highcharts}\n              options={options}\n            />\n            Reference:\n            <a href=\"https://api.highcharts.com/highcharts/series.scatter\">Highcharts API</a>\n            <a href=\"https://dynasties.operationsports.com/team-colors.php?sport=nba\">Color Link </a>\n          </div>\n        </Jumbotron>\n      </div>\n    )\n  }\n}\nexport default Example;\n","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Nav from './Components/Nav';\nimport Home from './Page/Home';\n// import About from './Page/About';\nimport Example from './Page/Example';\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <div className='container'>\n            <Nav />\n            <Switch>\n              <Route exact path={`/`} component={Home} />\n              {/* <Route exact path='/about' component={About} /> */}\n              <Route exact path={`/example`} component={Example} />\n              <Route render={function () {\n                return <p>Not Found</p>\n              }} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}